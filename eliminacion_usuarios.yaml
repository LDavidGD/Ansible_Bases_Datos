---
- name: Eliminacion de usuarios
  hosts: all
  vars:
    mariadb_host: 172.16.40.122
    mariadb_user: userdb
    mariadb_password: Test2025
    puerto: 3306
    nombre_usr: Garcia

  tasks:
##################################################################################
## VALIDAR SI EXISTE EL USUARIO

    - name: Verificar si existe el usuario
      community.mysql.mysql_query:
        login_host: "{{ mariadb_host }}"
        login_user: "{{ mariadb_user }}"
        login_password: "{{ mariadb_password }}"
        query: >
          SELECT EXISTS (
            SELECT user FROM mysql.user
            WHERE user = "{{ nombre_usr }}"
          ) AS existe;
      register: verificar_user

##################################################################################
## ELIMINACION DEL USUARIO 

    - name: Tratar de eliminar usuario
      block:
      - name: Eliminar usuario en MariaDB
        community.mysql.mysql_user:
          name: "{{ nombre_usr }}"
          host: "%"
          state: absent
          login_host: "{{ mariadb_host }}"
          login_user: "{{ mariadb_user }}"
          login_password: "{{ mariadb_password }}"
        register: delete_user
        when: verificar_user.query_result[0][0]['existe']

      rescue:
        - name: Marcar error de eliminacion
          set_fact:
            delete_error: true

    - debug: var=delete_user

##################################################################################
## EVALUAR RESULTADO DE LAS TAREAS

    - name: Evaluar resultado al tratar de eliminar un usuario
      set_fact:
        resultTarea: >-
          {%- if verificar_user.query_result[0][0]['existe'] and delete_user.changed -%}
            SUCCESSFUL
          {%- else -%}
            ESCALATED
          {%- endif -%}

##################################################################################
## MOSTRAR RESULTADO FINAL

    - name: Resultado cuando se elimina exitosamente el usuario
      block:
        - name: Muestra el resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "El usuario -{{ nombre_usr }}- ha sido eliminado exitosamente" 
              - "Host: {{ mariadb_host }}"
              - "Puerto: {{ puerto }}"
          ignore_errors: yes
      when: resultTarea is defined and resultTarea == "SUCCESSFUL"

    - name: Resultado cuando el usuario no existe
      block:
        - name: Muestra el resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "El usuario ingresado -{{ nombre_usr }}- no existe"
              - "Host: {{ mariadb_host }}"
              - "Puerto: {{ puerto }}"
          ignore_errors: yes
      when: resultTarea is defined and resultTarea == "ESCALATED" and not verificar_user.query_result[0][0]['existe']

    - name: Resultado cuando el usuario no se elimino correctamente
      block:
        - name: Muestra el resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "El usuario ingresado -{{ nombre_usr }}- no pudo eliminarse correctamente"
              - "Host: {{ mariadb_host }}"
              - "Puerto: {{ puerto }}"
          ignore_errors: yes
      when: resultTarea is defined and resultTarea == "ESCALATED" and not delete_user.changed and verificar_user.query_result[0][0]['existe'] and delete_error | default(false)